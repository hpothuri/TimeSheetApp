package model.eo;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 22 13:07:57 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TimeSheetTasksEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TaskId,
        Task,
        TaskDesc;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int TASKID = AttributesEnum.TaskId.index();
    public static final int TASK = AttributesEnum.Task.index();
    public static final int TASKDESC = AttributesEnum.TaskDesc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TimeSheetTasksEOImpl() {
    }

    /**
     * Gets the attribute value for TaskId, using the alias name TaskId.
     * @return the value of TaskId
     */
    public BigDecimal getTaskId() {
        return (BigDecimal) getAttributeInternal(TASKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaskId.
     * @param value value to set the TaskId
     */
    public void setTaskId(BigDecimal value) {
        setAttributeInternal(TASKID, value);
    }

    /**
     * Gets the attribute value for Task, using the alias name Task.
     * @return the value of Task
     */
    public String getTask() {
        return (String) getAttributeInternal(TASK);
    }

    /**
     * Sets <code>value</code> as the attribute value for Task.
     * @param value value to set the Task
     */
    public void setTask(String value) {
        setAttributeInternal(TASK, value);
    }

    /**
     * Gets the attribute value for TaskDesc, using the alias name TaskDesc.
     * @return the value of TaskDesc
     */
    public String getTaskDesc() {
        return (String) getAttributeInternal(TASKDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaskDesc.
     * @param value value to set the TaskDesc
     */
    public void setTaskDesc(String value) {
        setAttributeInternal(TASKDESC, value);
    }

    /**
     * @param taskId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal taskId) {
        return new Key(new Object[] { taskId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.TimeSheetTasksEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        this.setTaskId(new SequenceImpl("TIMESHEET_TASK_ID_SEQ",getDBTransaction()).getSequenceNumber().getBigDecimalValue());
    }
}

