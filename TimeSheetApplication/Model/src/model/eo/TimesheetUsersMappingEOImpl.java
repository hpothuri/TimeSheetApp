package model.eo;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 17 12:00:18 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TimesheetUsersMappingEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TimeSheetId,
        SubmittedBy,
        SubmittedTo,
        MappingId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int TIMESHEETID = AttributesEnum.TimeSheetId.index();
    public static final int SUBMITTEDBY = AttributesEnum.SubmittedBy.index();
    public static final int SUBMITTEDTO = AttributesEnum.SubmittedTo.index();
    public static final int MAPPINGID = AttributesEnum.MappingId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TimesheetUsersMappingEOImpl() {
    }

    /**
     * Gets the attribute value for TimeSheetId, using the alias name TimeSheetId.
     * @return the value of TimeSheetId
     */
    public BigDecimal getTimeSheetId() {
        return (BigDecimal) getAttributeInternal(TIMESHEETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TimeSheetId.
     * @param value value to set the TimeSheetId
     */
    public void setTimeSheetId(BigDecimal value) {
        setAttributeInternal(TIMESHEETID, value);
    }

    /**
     * Gets the attribute value for SubmittedBy, using the alias name SubmittedBy.
     * @return the value of SubmittedBy
     */
    public BigDecimal getSubmittedBy() {
        return (BigDecimal) getAttributeInternal(SUBMITTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubmittedBy.
     * @param value value to set the SubmittedBy
     */
    public void setSubmittedBy(BigDecimal value) {
        setAttributeInternal(SUBMITTEDBY, value);
    }

    /**
     * Gets the attribute value for SubmittedTo, using the alias name SubmittedTo.
     * @return the value of SubmittedTo
     */
    public BigDecimal getSubmittedTo() {
        return (BigDecimal) getAttributeInternal(SUBMITTEDTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubmittedTo.
     * @param value value to set the SubmittedTo
     */
    public void setSubmittedTo(BigDecimal value) {
        setAttributeInternal(SUBMITTEDTO, value);
    }

    /**
     * Gets the attribute value for MappingId, using the alias name MappingId.
     * @return the value of MappingId
     */
    public BigDecimal getMappingId() {
        return (BigDecimal) getAttributeInternal(MAPPINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MappingId.
     * @param value value to set the MappingId
     */
    public void setMappingId(BigDecimal value) {
        setAttributeInternal(MAPPINGID, value);
    }

    /**
     * @param mappingId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal mappingId) {
        return new Key(new Object[] { mappingId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.TimesheetUsersMappingEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        this.setMappingId(new SequenceImpl("TIMESHEET_USERS_MAPID_SEQ",getDBTransaction()).getSequenceNumber().getBigDecimalValue());
    }
}

