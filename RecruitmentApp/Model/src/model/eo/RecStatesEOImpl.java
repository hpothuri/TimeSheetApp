package model.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 18 15:09:37 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RecStatesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        StateId,
        StateName,
        CreatedBy,
        CreatedOn,
        UpdatedBy,
        UpdatedOn;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int STATEID = AttributesEnum.StateId.index();
    public static final int STATENAME = AttributesEnum.StateName.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDON = AttributesEnum.CreatedOn.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDON = AttributesEnum.UpdatedOn.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RecStatesEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.RecStatesEO");
    }

    /**
     * Gets the attribute value for StateId, using the alias name StateId.
     * @return the value of StateId
     */
    public BigDecimal getStateId() {
        return (BigDecimal) getAttributeInternal(STATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StateId.
     * @param value value to set the StateId
     */
    public void setStateId(BigDecimal value) {
        setAttributeInternal(STATEID, value);
    }

    /**
     * Gets the attribute value for StateName, using the alias name StateName.
     * @return the value of StateName
     */
    public String getStateName() {
        return (String) getAttributeInternal(STATENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StateName.
     * @param value value to set the StateName
     */
    public void setStateName(String value) {
        setAttributeInternal(STATENAME, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedOn, using the alias name CreatedOn.
     * @return the value of CreatedOn
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) getAttributeInternal(CREATEDON);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedOn.
     * @param value value to set the CreatedOn
     */
    public void setCreatedOn(Timestamp value) {
        setAttributeInternal(CREATEDON, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedOn, using the alias name UpdatedOn.
     * @return the value of UpdatedOn
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) getAttributeInternal(UPDATEDON);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedOn.
     * @param value value to set the UpdatedOn
     */
    public void setUpdatedOn(Timestamp value) {
        setAttributeInternal(UPDATEDON, value);
    }


    /**
     * @param stateId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal stateId) {
        return new Key(new Object[] { stateId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
}

