package model.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 18 15:08:40 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RecReferencesInfoEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RefId,
        CandidateId,
        RefName,
        Designation,
        EmailId,
        TelephoneNo,
        Organization,
        Address,
        ProfRelation,
        Association,
        CreatedBy,
        CreatedOn,
        UpdatedBy,
        UpdatedOn,
        RecCandidateInfoEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int REFID = AttributesEnum.RefId.index();
    public static final int CANDIDATEID = AttributesEnum.CandidateId.index();
    public static final int REFNAME = AttributesEnum.RefName.index();
    public static final int DESIGNATION = AttributesEnum.Designation.index();
    public static final int EMAILID = AttributesEnum.EmailId.index();
    public static final int TELEPHONENO = AttributesEnum.TelephoneNo.index();
    public static final int ORGANIZATION = AttributesEnum.Organization.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int PROFRELATION = AttributesEnum.ProfRelation.index();
    public static final int ASSOCIATION = AttributesEnum.Association.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDON = AttributesEnum.CreatedOn.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDON = AttributesEnum.UpdatedOn.index();
    public static final int RECCANDIDATEINFOEO = AttributesEnum.RecCandidateInfoEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RecReferencesInfoEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.RecReferencesInfoEO");
    }


    /**
     * Gets the attribute value for RefId, using the alias name RefId.
     * @return the value of RefId
     */
    public BigDecimal getRefId() {
        return (BigDecimal) getAttributeInternal(REFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefId.
     * @param value value to set the RefId
     */
    public void setRefId(BigDecimal value) {
        setAttributeInternal(REFID, value);
    }

    /**
     * Gets the attribute value for CandidateId, using the alias name CandidateId.
     * @return the value of CandidateId
     */
    public BigDecimal getCandidateId() {
        return (BigDecimal) getAttributeInternal(CANDIDATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CandidateId.
     * @param value value to set the CandidateId
     */
    public void setCandidateId(BigDecimal value) {
        setAttributeInternal(CANDIDATEID, value);
    }

    /**
     * Gets the attribute value for RefName, using the alias name RefName.
     * @return the value of RefName
     */
    public String getRefName() {
        return (String) getAttributeInternal(REFNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefName.
     * @param value value to set the RefName
     */
    public void setRefName(String value) {
        setAttributeInternal(REFNAME, value);
    }

    /**
     * Gets the attribute value for Designation, using the alias name Designation.
     * @return the value of Designation
     */
    public String getDesignation() {
        return (String) getAttributeInternal(DESIGNATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Designation.
     * @param value value to set the Designation
     */
    public void setDesignation(String value) {
        setAttributeInternal(DESIGNATION, value);
    }

    /**
     * Gets the attribute value for EmailId, using the alias name EmailId.
     * @return the value of EmailId
     */
    public String getEmailId() {
        return (String) getAttributeInternal(EMAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailId.
     * @param value value to set the EmailId
     */
    public void setEmailId(String value) {
        setAttributeInternal(EMAILID, value);
    }

    /**
     * Gets the attribute value for TelephoneNo, using the alias name TelephoneNo.
     * @return the value of TelephoneNo
     */
    public Long getTelephoneNo() {
        return (Long) getAttributeInternal(TELEPHONENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TelephoneNo.
     * @param value value to set the TelephoneNo
     */
    public void setTelephoneNo(Long value) {
        setAttributeInternal(TELEPHONENO, value);
    }

    /**
     * Gets the attribute value for Organization, using the alias name Organization.
     * @return the value of Organization
     */
    public String getOrganization() {
        return (String) getAttributeInternal(ORGANIZATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Organization.
     * @param value value to set the Organization
     */
    public void setOrganization(String value) {
        setAttributeInternal(ORGANIZATION, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the value of Address
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for ProfRelation, using the alias name ProfRelation.
     * @return the value of ProfRelation
     */
    public String getProfRelation() {
        return (String) getAttributeInternal(PROFRELATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProfRelation.
     * @param value value to set the ProfRelation
     */
    public void setProfRelation(String value) {
        setAttributeInternal(PROFRELATION, value);
    }

    /**
     * Gets the attribute value for Association, using the alias name Association.
     * @return the value of Association
     */
    public String getAssociation() {
        return (String) getAttributeInternal(ASSOCIATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Association.
     * @param value value to set the Association
     */
    public void setAssociation(String value) {
        setAttributeInternal(ASSOCIATION, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreatedOn, using the alias name CreatedOn.
     * @return the value of CreatedOn
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) getAttributeInternal(CREATEDON);
    }


    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }


    /**
     * Gets the attribute value for UpdatedOn, using the alias name UpdatedOn.
     * @return the value of UpdatedOn
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) getAttributeInternal(UPDATEDON);
    }


    /**
     * @return the associated entity RecCandidateInfoEOImpl.
     */
    public RecCandidateInfoEOImpl getRecCandidateInfoEO() {
        return (RecCandidateInfoEOImpl) getAttributeInternal(RECCANDIDATEINFOEO);
    }

    /**
     * Sets <code>value</code> as the associated entity RecCandidateInfoEOImpl.
     */
    public void setRecCandidateInfoEO(RecCandidateInfoEOImpl value) {
        setAttributeInternal(RECCANDIDATEINFOEO, value);
    }


    /**
     * @param refId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal refId) {
        return new Key(new Object[] { refId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
}

