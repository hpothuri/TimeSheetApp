package model.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 18 15:09:03 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RecReferralInfoEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ReferralId,
        CandidateId,
        RecruiterName,
        ReferenceName,
        CreatedBy,
        CreatedOn,
        UpdatedBy,
        UpdatedOn,
        RecCandidateInfoEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int REFERRALID = AttributesEnum.ReferralId.index();
    public static final int CANDIDATEID = AttributesEnum.CandidateId.index();
    public static final int RECRUITERNAME = AttributesEnum.RecruiterName.index();
    public static final int REFERENCENAME = AttributesEnum.ReferenceName.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDON = AttributesEnum.CreatedOn.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDON = AttributesEnum.UpdatedOn.index();
    public static final int RECCANDIDATEINFOEO = AttributesEnum.RecCandidateInfoEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RecReferralInfoEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.RecReferralInfoEO");
    }


    /**
     * Gets the attribute value for ReferralId, using the alias name ReferralId.
     * @return the value of ReferralId
     */
    public BigDecimal getReferralId() {
        return (BigDecimal) getAttributeInternal(REFERRALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferralId.
     * @param value value to set the ReferralId
     */
    public void setReferralId(BigDecimal value) {
        setAttributeInternal(REFERRALID, value);
    }

    /**
     * Gets the attribute value for CandidateId, using the alias name CandidateId.
     * @return the value of CandidateId
     */
    public BigDecimal getCandidateId() {
        return (BigDecimal) getAttributeInternal(CANDIDATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CandidateId.
     * @param value value to set the CandidateId
     */
    public void setCandidateId(BigDecimal value) {
        setAttributeInternal(CANDIDATEID, value);
    }

    /**
     * Gets the attribute value for RecruiterName, using the alias name RecruiterName.
     * @return the value of RecruiterName
     */
    public String getRecruiterName() {
        return (String) getAttributeInternal(RECRUITERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecruiterName.
     * @param value value to set the RecruiterName
     */
    public void setRecruiterName(String value) {
        setAttributeInternal(RECRUITERNAME, value);
    }

    /**
     * Gets the attribute value for ReferenceName, using the alias name ReferenceName.
     * @return the value of ReferenceName
     */
    public String getReferenceName() {
        return (String) getAttributeInternal(REFERENCENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceName.
     * @param value value to set the ReferenceName
     */
    public void setReferenceName(String value) {
        setAttributeInternal(REFERENCENAME, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreatedOn, using the alias name CreatedOn.
     * @return the value of CreatedOn
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) getAttributeInternal(CREATEDON);
    }


    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }


    /**
     * Gets the attribute value for UpdatedOn, using the alias name UpdatedOn.
     * @return the value of UpdatedOn
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) getAttributeInternal(UPDATEDON);
    }


    /**
     * @return the associated entity RecCandidateInfoEOImpl.
     */
    public RecCandidateInfoEOImpl getRecCandidateInfoEO() {
        return (RecCandidateInfoEOImpl) getAttributeInternal(RECCANDIDATEINFOEO);
    }

    /**
     * Sets <code>value</code> as the associated entity RecCandidateInfoEOImpl.
     */
    public void setRecCandidateInfoEO(RecCandidateInfoEOImpl value) {
        setAttributeInternal(RECCANDIDATEINFOEO, value);
    }


    /**
     * @param referralId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal referralId) {
        return new Key(new Object[] { referralId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
}

